
Device Location Tracking and Sharing
Requirements Document
(Link to Google Doc in readme for formatted version)

Project Description
  The Device Location Tracking and Sharing app is a proof of concept for 14Eleven Development’s current app, The Traveler.
  While The Traveler allows users to track their routes and geo-mapped media markers, our app will allow users to sync their
  routes with other users that share a pre-defined group with them.

User classes and characteristics
  Tourists
    Average user, syncs with group, takes tour, and can view others and their media
  Group creator
    Creates pre-approved group
  Path uploader
    Imports paths from external sources

Technical constraints 
  The application needs an internet connection to access data to be able to work properly.
  
  The application device needs to be able to receive a clear GPS signal in order to work properly.
  
  The application needs to be able to work correctly on different Android devices.
  
  The application needs to get its information from Azure blob and/or Azure Cloud storage.
  
  The application needs to be coded natively, using Java for Android and Swift for iOS.

Use Cases 
  Use Case Name: Log in
  Actors: Tourist, Creator, Uploader
  Summary Description: The ability to sign into the application using your google account.
  Priority: Low
  Pre-Condition: Must have a Google account

  Use Case Name: Log out
  Actors: Tourist, Creator, Uploader
  Summary Description: The ability to sign out of your google account 
  Priority: Low
  Pre-Condition: Must be logged in

  Use Case Name: Sync with users
  Actors: Tourist
  Summary Description: Syncing all devices shows that the group is ready to start the trip. and have their location tracked
  Priority: Medium
  Pre-Condition: Must be signed in, Other Users must also be signed in and be part of a group

  Use Case Name: Tracked Tour start
  Actors: Tourist
  Summary Description: This is the step after syncing groups as now the tour is ready to go and any routes can be added
  Priority: High
  Pre-Condition: Everyone is signed in and synced with their group

  Use Case Name:View other users in real time
  Actors: Tourist
  Summary Description: Allows users to see where other members are on a map in real-time
  Priority: High
  Pre-Condition(s): The app is open and working correctly
                            The user is logged in to the app.
                            The user has a good GPS signal.
                            The user has started a trip.
  Post-Condition(s): The tourist can see a visual representation on their device of their location and the location of others in the group.
  Basic Path:   1. Open Traveler App
                2. Login in using Google, Facebook, etc.
                3. Join Group
                4. Start Trip 

  Use Case Name: Upload Media on Tour
  Actors: Tourist
  Summary Description: Allows user to upload their media to some remote storage.
  Priority: High
  Pre-Condition: The user’s device has access to the internet.
                        The user is logged in.
                        The user has given the app the necessary permissions to access their media
                        The user has created some media(photos, video, etc.)
  Post Condition(s): The user has sent their media to a server.

  Use Case Name: View others Media on Tour
  Actors: Tourist
  Summary Description: Allows the user to view the other active group members media during the trip.
  Priority: Medium-High
  Pre-Condition: The user has started a trip
                  The user has joined a group of pre-approved Users
  Post-Condition: The user can view an album containing the media retrieved from a remote storage location.

  Use Case Name: View Tour data after tour
  Actors: Tourist
  Summary Description: Allows the user to see different statistics from their journey after their trip is completed. 
  Priority: Medium
  Pre-Condition: The user has ended their trip.
  Post-Condition: After the trip is completed a page is shown displaying the stats from the trip.                         

  Use Case Name: Create Group of Pre-Approved Users
  Actors: Creator
  Summary Description: The group creator can create a group of users, and those will be who they can sync with in their trips
  Priority: High
  Pre-Condition: All users should have an account connected to the app
  Post-Condition: The created group now exists on the app and can be added to and removed from

  Use Case Name: Add Users to Group
  Actors: Creator
  Summary Description: The admin (or anyone depending on group permissions) can add a user to a pre-existing group
  Priority: Medium
  Pre-Condition: The creator has to be an admin (depending on group permissions) and a member of the group
  Post-Condition: That user is now part of the group and can join in tours that group takes

  Use Case Name: Remove Users From Group
  Actors: Creator
  Summary Description: The admin (or anyone depending on group permissions) can remove a user from a pre-existing group
  Priority: Low
  Pre-Condition: The creator must be an admin (depending on group permissions), the group must exist, and the user to be removed must be part of the group
  Post-Condition: The group does not contain that user anymore, and the user cannot join in tours that group takes 

  Use Case Name: Import Routes From External Sources
  Actors: User
  Summary Description: The user can import a route from an external source, like Google Maps, and view it in their past trips
  Priority: Low
  Pre-Condition: The route must be in a compatible format
  Post-Condition: The route is in the user’s “library” and is viewable like every other route

 @startuml
 left to right direction
 actor Tourist as tourist
 actor :Group Creator: as creator
 actor Uploader as uploader

 tourist -> (Log in)
 creator -> (Log in)
 uploader -> (Log in)

 tourist -> (Log out)
 creator -> (Log out)
 uploader -> (Log out)

 tourist --> (Sync with other users)
 tourist --> (Take tracked tour)
 tourist --> (View other users in real time)
 tourist --> (Upload media on tour)
 tourist --> (View others' media on tour)
 tourist --> (View tour data after tour)

 creator --> (Create group of pre-approved users)
 creator --> (Add users to group)
 creator --> (Remove users from group)
 
 uploader --> (Import routes from external programs, like Google Maps)
@enduml

Functional requirements
 High Priority
   Group creation - Users must be able to create a group to sync with before the tour begins
   
   Group syncing - Users must be able to sync with each other within their pre-created groups
   
 Medium Priority
   Media markers - Users must be able to add media markers to their tours
   
 Low Priority
   External sources - Users must be able to import paths from external sources

Non-functional requirements
 High Priority
   Retained records - Routes have to be accessible by the user after the tour ends

   Real time - The routes should update based on the time the user sets in the settings, or defaults to 5 seconds
   
 Medium Priority
   Connection fallback - Path data will be stored on the device if wifi connection is lost and kept until restored
   
 Low Priority
   Recording efficiency - Data is not recorded while the user is standing in place for an extended period of time

Assumptions
 Implementation details (eg. how users sync with each other) will be up to our interpretation (confirmed)

 It is acceptable to work on the Android version of the application first
   Client confirmed, and further stated that an iOS version is not entirely necessary, though it would be nice

